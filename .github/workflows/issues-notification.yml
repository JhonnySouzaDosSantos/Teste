name: Notificar Issues no Discord

on:
  issues:
    types: [opened, edited, closed, reopened]
  issue_comment:
    types: [created, edited]

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Enviar notificaÃ§Ã£o
        env:
          WEBHOOK_URL: ${{ secrets.DISCORD_ISSUES_WEBHOOK }}
          EVENT_TYPE: ${{ github.event.action }}
          ISSUE_TITLE: ${{ github.event.issue.title }}
          ISSUE_BODY: ${{ toJSON(github.event.issue.body) }}
          ISSUE_URL: ${{ github.event.issue.html_url }}
          USER: ${{ github.event.issue.user.login }}
        run: |
          # Configura a mensagem base
          MESSAGE="ðŸ“¢ **Nova Atividade em Issue**\n"
          MESSAGE+="ðŸ”¹ **Tipo:** \`$EVENT_TYPE\`\n"
          MESSAGE+="ðŸ”¹ **TÃ­tulo:** [$ISSUE_TITLE]($ISSUE_URL)\n"
          MESSAGE+="ðŸ”¹ **Autor:** $USER\n\n"
          MESSAGE+="**DescriÃ§Ã£o:**\n"

          # Adiciona a descriÃ§Ã£o (tratando caracteres especiais)
          CLEAN_BODY=$(echo "$ISSUE_BODY" | sed -e 's/^"//' -e 's/"$//' -e 's/\\"/"/g')
          MESSAGE+="$CLEAN_BODY\n\n"

          # Se for um comentÃ¡rio
          if [[ "$EVENT_TYPE" == "created" || "$EVENT_TYPE" == "edited" ]]; then
            COMMENT=${{ toJSON(github.event.comment.body) }}
            CLEAN_COMMENT=$(echo "$COMMENT" | sed -e 's/^"//' -e 's/"$//' -e 's/\\"/"/g')
            MESSAGE+="ðŸ’¬ **ComentÃ¡rio:**\n$CLEAN_COMMENT\n"
          fi

          # Envia usando Python para garantir o formato
          python3 -c "
          import os, json, requests
          from urllib.parse import quote
          
          message = os.environ.get('MESSAGE')
          webhook_url = os.environ.get('WEBHOOK_URL')
          
          payload = {
              'content': message,
              'allowed_mentions': {'parse': []}
          }
          
          try:
              response = requests.post(webhook_url, json=payload)
              response.raise_for_status()
              print('NotificaÃ§Ã£o enviada com sucesso!')
          except Exception as e:
              print(f'Erro ao enviar: {str(e)}')
          "