name: Notificar no Discord

on:
  push:
    branches:
      - '**'

jobs:
  enviar-mensagem:
    runs-on: ubuntu-latest

    steps:
      - name: Checar o código
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Enviar notificação formatada
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK }}
        run: |
          # Obtém commits de forma segura
          COMMITS=$(git log --pretty=format:"%h|%an|%s" ${{ github.event.before }}..${{ github.sha }} 2>/dev/null || git log -1 --pretty=format:"%h|%an|%s")
          # Formata a data (ex: "25/06/2023 14:30")
          DATE=$(echo "$CREATED_AT" | cut -d'T' -f1)
          TIME=$(echo "$CREATED_AT" | cut -d'T' -f2 | cut -d'Z' -f1)
          FORMATTED_DATE="$(echo $DATE | awk -F'-' '{print $3"/"$2"/"$1}') $TIME"


          # Cabeçalho fixo
          MESSAGE="\n📌 **Novo Push no Repositório!**"
          MESSAGE+="\n🌿 **Branch:** ${{ github.ref_name }}"
          MESSAGE+="\n🔢 **Total de Commits:** $(echo "$COMMITS" | wc -l)"
          MESSAGE="\n📅 **Data:** $FORMATTED_DATE"
          MESSAGE+="\n――――――――――――――――――"

          # Processa cada commit
          while IFS='|' read -r HASH USER MSG; do
            MESSAGE+="\n\n👤 **Usuário:** $USER"
            MESSAGE+="\n🆔 **Hash:** \`$HASH\`"
            MESSAGE+="\n💬 **Mensagem:** $MSG\n"
            MESSAGE+="\n――――――――――――――――――"
          done <<< "$COMMITS"

          # Envia usando curl com tratamento de erro
          curl -H "Content-Type: application/json" \
               -X POST \
               -d "{\"content\":\"$MESSAGE\"}" \
               "$DISCORD_WEBHOOK_URL" \
               || echo "❗ Erro ao enviar para o Discord (Status code: $?)"