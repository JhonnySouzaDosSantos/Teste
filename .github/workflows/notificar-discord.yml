name: Notificar no Discord

on:
  push:
    branches:
      - '**'

jobs:
  enviar-mensagem:
    runs-on: ubuntu-latest

    steps:
      - name: Checar o c칩digo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Pega todo o hist칩rico de commits

      - name: Enviar notifica칞칚o para o Discord
        env:
          DISCORD_WEBHOOK_URL: "https://discord.com/api/webhooks/1394547222389194762/Q7b3I0tLxsbxQNiP9jRZQQx7uGx-9sVMcIrcItoIurbnidX9RlUG3I1a25eOyZZasFAl?thread_id=1394542894626377790"  # Substitua pelo seu URL real
        run: |
          # Obt칠m os commits entre o 칰ltimo push e o atual (usando git log)
          COMMITS=$(git log --pretty=format:"%h|%an|%s" ${{ github.event.before }}..${{ github.sha }})

          # Se n칚o houver commits novos (push for칞ado ou outros casos), usa apenas o 칰ltimo commit
          if [ -z "$COMMITS" ]; then
            COMMITS=$(git log -1 --pretty=format:"%h|%an|%s")
          fi

          # Inicializa a mensagem
          MESSAGE="游닉 **Novo Push no Reposit칩rio!**\n\n"
          MESSAGE+="游댳 **Branch:** ${{ github.ref_name }}\n"
          MESSAGE+="游댳 **Total de Commits:** $(echo "$COMMITS" | wc -l)\n\n"
          MESSAGE+="**Commits:**\n"

          # Processa cada commit
          while IFS='|' read -r HASH USER MSG; do
            MSG_ESCAPED=$(echo "$MSG" | sed 's/"/\\"/g')  # Escapa aspas para JSON
            MESSAGE+="\n- \`$HASH\` **$USER:** $MSG_ESCAPED"
          done <<< "$COMMITS"

          # Monta o payload JSON corretamente
          JSON_PAYLOAD=$(jq -n --arg content "$MESSAGE" '{content: $content}')

          # Envia para o Discord
          curl -H "Content-Type: application/json" \
               -X POST \
               -d "$JSON_PAYLOAD" \
               "$DISCORD_WEBHOOK_URL"